@using AccentureAccademyLibrary.GonzaloIriart.Models
@{
    ViewBag.Title = "Library";
}
@{
    AccentureAccademyLibraryEntities db = new AccentureAccademyLibraryEntities();
    List<Author> authors = db.Author.OrderBy(author => author.Name).ToList();
    List<Genre> genres = db.Genre.OrderBy(g => g.Name).ToList();
    List<Publisher> publishers = db.Publisher.OrderBy(p => p.Name).ToList();
}
<head>
</head>
<body>
    <div class="search">
    <input type="text" value="" placeholder="Search.." /><button class="glyphicon glyphicon-search" style="background-color: #FF6F5E;"></button>
    </div>
    <div class="filters container">
        <div>
            <label for="selAuthor">Author</label>
            <select id="selAuthor" class="form-control" value="">
                <option>Select Author...</option>
                @foreach (Author a in authors)
                {
                    <option value="@a.Id">
                        @a.Name
                    </option>
                }
            </select>
        </div>
        <div>
            <label for="selGenre">Genre</label>
            <select id="selGenre" class="form-control" value="">
                <option>Select Genre...</option>

                @foreach (Genre g in genres)
                {
                    <option value="@g.Id">
                        @g.Name
                    </option>
                }
            </select>

        </div>
        <div>
            <label for="selPublisher">Publisher</label>
            <select id="selPublisher" class="form-control" value="">
                <option>Select Publisher...</option>
                @foreach (Publisher p in publishers)
                {
                    <option value="@p.Id">
                        @p.Name
                    </option>
                }
            </select>

        </div>
        <button class="round-button" id="btnFilter">Filter</button>
    </div>
   
    <h2 style="font-size: 5rem;">Lista de Libros</h2>
    <ul id="bookList">
    </ul>

    <script>
        let lista = document.querySelector("#bookList");
        fetch('/Library/JsonBooks')
            .then(function (response) {
                return response.json();
            })
            .then(function (myJson) {
                renderBookList(myJson);                
            });
        let searchInput = document.querySelector(".search input");
        searchInput.addEventListener("keyup", () => {
            if (searchInput.value.length >= 2) {
                fetch('/Library/Search?search=' + searchInput.value)
                    .then(response => { return response.json(); })
                    .then(myJson => {
                        renderBookList(myJson);
                    });
            }
        });
        let btnFilter = document.querySelector("#btnFilter");
        btnFilter.addEventListener("click", () => {
            let edit = document.querySelector("#selEditorial").value;
            let genre = document.querySelector("#selGenre").value;
            let author = document.querySelector("#selAuthor").value;
                fetch('/Library/Filter?g=' + genre + '&e=' + edit +'&a=' +author)
                    .then(response => { return response.json(); }) 
                    .then(myJson => {
                        renderBookList(myJson);
                    });
        })
        function renderBookList(books) {
            lista.innerHTML = '';
            books.map(book => {
                    let bookItem = document.createElement("li");
                    bookItem.classList.add("book-item");
                    let bookInfo = `
                                                <img src="${book.Cover}"/>
                                                <h3>${book.Title}</h3>
                                                <p>${book.Description}</p>
                                                <p>${book.Genre.Name}</p>
                                            `;
                    console.log(book);
                    book.Author.forEach(author => { bookInfo = bookInfo + `<p>${author.Name}</p>` })
                    bookInfo = bookInfo + `
                                                <div class="action-buttons">
                                                    <a href="/Library/Edit?id=${book.Id}"><button class="round-button glyphicon glyphicon-pencil" id="edit-book"></button></a>
                                                    <a href="/Library/Delete?id=${book.Id}"><button class="round-button glyphicon glyphicon-trash" id="delete-book"></button></a>
                                                </div>`
                    bookItem.addEventListener("click", () => location.href = "/Library/BookDetails/" + book.Id);
                    bookItem.innerHTML = bookInfo;
                    lista.appendChild(bookItem);
                })
        }
    </script>
</body>