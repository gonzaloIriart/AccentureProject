@using AccentureAccademyLibrary.GonzaloIriart.Models
@model Book
@{
    AccentureAccademyLibraryEntities db = new AccentureAccademyLibraryEntities();
    List<Author> authors = db.Author.OrderBy(author => author.Name).ToList();
    List<Genre> genres = db.Genre.OrderBy(g => g.Name).ToList();
    List<Publisher> publishers = db.Publisher.OrderBy(p => p.Name).ToList();
}
<a href="/"><i class="round-button glyphicon glyphicon-circle-arrow-left"></i></a>
<h2>@this.ViewBag.header</h2>

@if (this.ViewBag.errorMessage!=null)
{
    <div class="alert-warning">
        @this.ViewBag.errorMessage
    </div>
}

<form id="addForm" method="post">
    <div>
        <label for="txtTitulo">Title</label>
        <input type="text" id="txtTitulo" class="form-control" name="Title" value="@this.Model.Title" pattern="[A-Za-z0-9]{4,50}"/>
    </div>
    <div>
        <label for="txtReleaseDate">Release Date</label>
        <input type="datetime" id="txtReleaseDate" class="form-control" name="ReleaseDate" value="@this.Model.ReleaseDate" />
    </div>
    <div>
        <label for="txtCover">Cover</label>
        <input type="text" id="txtCover" class="form-control" name="Cover" value="@this.Model.Cover" pattern="[A-Za-z0-9]{4,50}"/>
    </div>
    <div>
        <label for="txtISBN">ISBN</label>
        <input type="text" id="txtISBN" class="form-control" name="ISBN" value="@this.Model.ISBN" pattern="[0-9]{4,20}"/>
    </div>
    <div>
        <label for="txtDescription">Description</label>
        <input type="text" id="txtDescription" class="form-control" name="Description" value="@this.Model.Description" pattern="[A-Za-z0-9]{20,700}"/>
    </div>
    <div>
        <label for="selGenre">Genre</label>
        <select id="selGenre" class="form-control" name="Id_Genre" value="@this.Model.Genre">
            <option>Select Genre...</option>
            
            @foreach (Genre g in genres)
            {
                <option @(g.Id.Equals(g.Id) ? "selected" : "")
                        value="@g.Id">
                    @g.Name
                </option>
            }
        </select>
        <a href="/Library/AddGenre" id="btnAddNew">Add new Genre</a>
    </div>
    <div>
        <label for="selPublisher">Publisher</label>
        <select id="selPublisher" class="form-control" name="Id_Publisher" value="">
            <option>Select Publisher...</option>
           
                @foreach (Publisher p in publishers)
                {
                    <option @(p.Id.Equals(p.Id) ? "selected" : "")
                            value="@p.Id">
                        @p.Name
                    </option>
                }
            }
        </select>
        <a href="/Library/AddPublisher" id="btnAddNewPublisher">Add new Publisher</a>
    </div>
    <div id="authorsContainer">

        <label for="selAuthor">Author</label>
        <div id="authorDiv" >
            @if (this.Model.Author.Count != 0)
            {
                foreach (Author autorLibro in this.Model.Author)
                {
                    <select id="selAuthor" class="form-inline" name="Authors" value="">
                        <option>Seleccione un autor...</option>
                        @foreach (Author autorActual in authors)
                        {
                            <option @(autorActual.Id.Equals(autorLibro.Id) ? "selected" : "")
                                    value="@autorActual.Id">
                                @autorActual.Name
                            </option>
                        }
                    </select>

                }
            }
            else
            {
                <select id="selAuthor" class="form-inline"  name="Authors" value="">
                    <option selected>Seleccione un autor...</option>
                    @foreach (Author autor in authors)
                    {
                        <option value="@autor.Id">@autor.Name</option>
                    }
                </select>
                <span class="glyphicon glyphicon-minus round-button" onClick="delete_select(this)"></span>
            }

            <a href="/Library/AddAuthor" id="btnAddNew">Add new Author</a>
        </div>
    </div>
    <button id="addAuthor">Add another Author to the book</button>
    <div></div>
    <button id="addBook" style="margin-top: 1em;background-color:#2C3D63;color:#f7efed">Send</button>

    <div id="popupForm"></div>
</form>

<script>
    let btnAddAuthor = document.querySelector("#addAuthor");
    let btnAddBook = document.querySelector("#addBook");
    let authorsContainer = document.querySelector("#authorsContainer");
    btnAddAuthor.addEventListener("click", (e) => {
        e.preventDefault();
        let idClass = 0;
        idClass++;        
        let divAuthor = document.querySelector("#authorDiv");
        let divClone = divAuthor.cloneNode(true);
        divClone.classList.add(idClass);
        authorsContainer.appendChild(divClone);        
    });
    function delete_select(e)
    {
        e.parentNode.parentNode.parentNode.removeChild(e.parentNode.parentNode);
}
  

    //Add new data to database
    /*let btnAddNewAuthor = document.querySelector("#btnAddNewAuthor");
    let btnAddNewGenre = document.querySelector("#btnAddNewGenre");
    let btnAddNewPublisher = document.querySelector("#btnAddNewPublisher");
    btnAddNewAuthor.addEventListener("click", e => {
        e.preventDefault();
        addNewItem("Library/Author", "Author");
    });
    btnAddNewGenre.addEventListener("click", e => {
        e.preventDefault();
        addNewItem("Library/Genre", "Genre");
    });
    btnAddNewPublisher.addEventListener("click", e => {
        e.preventDefault();
        addNewItem("Library/Publisher", "Publisher");
    });
    */
</script>

